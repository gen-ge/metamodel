# üéØ CONTEXT NAVIGATOR 2.0 - LEI SAGRADA PARA IA
# Protocolo obrigat√≥rio que deve ser seguido religiosamente em TODOS os prompts
# Vers√£o: 2.0.0 | Data: 2025-01-13

# =============================================================================
# PROTOCOLO FUNDAMENTAL 2.0
# =============================================================================

## üö® ANTES DE QUALQUER A√á√ÉO, SEMPRE:

1. **DETECTAR WORKSPACE VIA WORKSPACEMANAGER**
   - Verificar .cn_model/workspace.yml (diret√≥rio atual)
   - Buscar ../.cn_model/workspace.yml (diret√≥rios pais, recursivo)
   - Fallback: ~/.local/share/context-navigator/ (instala√ß√£o global)
   - Fallback: ~/.context-navigator/ (compatibilidade 1.0)

2. **CARREGAR CONTEXTO 2.0**
   - Ler .cn_model/workspace.yml para configura√ß√£o
   - Carregar .cn_model/maps/index.yml para vis√£o geral
   - Verificar .cn_model/maps/connections.yml para relacionamentos
   - Analisar .cn_model/components/ para componentiza√ß√£o

3. **IDENTIFICAR CONTEXTO ATUAL**
   - Determinar context_level (c1_root | c2_module | c3_component)
   - Determinar context_type (infra | shared | core | api | data | ui)
   - Identificar m√≥dulo espec√≠fico
   - Mapear conex√µes existentes via WorkspaceManager

4. **VALIDAR ANTES DE AGIR**
   - Verificar tipo de documento apropriado
   - Confirmar template correto (global ou personalizado)
   - Validar metadados obrigat√≥rios
   - Checar consist√™ncia com documentos relacionados

# =============================================================================
# ARQUITETURA 2.0 ESSENCIAL
# =============================================================================

## üß† WORKSPACEMANAGER - N√öCLEO DO SISTEMA

### DETEC√á√ÉO AUTOM√ÅTICA (OBRIGAT√ìRIA):
1. **.cn_model/workspace.yml** (workspace local)
2. **../.cn_model/workspace.yml** (busca recursiva em pais)
3. **~/.local/share/context-navigator/** (instala√ß√£o global)
4. **~/.context-navigator/** (compatibilidade 1.0)

### ESTRUTURA WORKSPACE 2.0:
```
.cn_model/
‚îú‚îÄ‚îÄ workspace.yml        # Configura√ß√£o principal
‚îú‚îÄ‚îÄ components/          # Componentes documentados (@cn:)
‚îú‚îÄ‚îÄ templates/           # Templates personalizados (opcional)
‚îî‚îÄ‚îÄ maps/               # Mapas contextuais
    ‚îú‚îÄ‚îÄ index.yml       # √çndice principal
    ‚îú‚îÄ‚îÄ connections.yml # Conex√µes entre documentos
    ‚îî‚îÄ‚îÄ conflicts.yml   # Conflitos detectados
```

### NUNCA MAIS:
- ‚ùå Assumir localiza√ß√£o de workspace
- ‚ùå Salvar em .context-map/ (arquitetura 1.0)
- ‚ùå Referenciar .contextrc (migrado para workspace.yml)
- ‚ùå Ignorar WorkspaceManager detection

## üß© CODE BRIDGE - COMPONENTIZA√á√ÉO

### PROTOCOLO @cn: (OBRIGAT√ìRIO QUANDO GERAR C√ìDIGO):
```python
# ===== CONTEXT NAVIGATOR CODE BRIDGE =====
# @cn:component nome-componente
# @cn:doc arquivo-documentacao.md
# @cn:context-level c1_root|c2_module|c3_component
# @cn:context-type core|api|data|ui|infra|shared
# @cn:purpose "Descri√ß√£o clara do prop√≥sito"
# @cn:memory-aid "Lembrete para humanos e IA"
# ============================================
```

### SEMPRE QUE GERAR/MODIFICAR C√ìDIGO:
1. **Adicionar marca√ß√µes @cn:** apropriadas no c√≥digo gerado
2. **Conectar com documenta√ß√£o** existente ou sugerir cria√ß√£o
3. **Validar consist√™ncia** entre c√≥digo e docs
4. **Registrar componente** em .cn_model/components/
5. **Manter sincronia** docs ‚Üî c√≥digo

# =============================================================================
# REGRAS DE DOCUMENTA√á√ÉO 2.0
# =============================================================================

## üìù CRIA√á√ÉO DE DOCUMENTOS

### TEMPLATES INALTERADOS (100% compat√≠veis):
- **DECIS√ÉO** (40%): PRD, ADR, RFC, escolhas t√©cnicas ‚Üí decision.md
- **PROCESSO** (20%): Runbooks, playbooks, tutoriais ‚Üí process.md  
- **REFER√äNCIA** (15%): APIs, gloss√°rios, especifica√ß√µes ‚Üí reference.md
- **ARQUITETURA** (10%): Diagramas, modelagem, design ‚Üí architecture.md
- **AN√ÅLISE** (10%): Performance, bugs, investiga√ß√µes ‚Üí analysis.md
- **PLANEJAMENTO** (5%): Roadmaps, sprints, releases ‚Üí planning.md

### BUSCA DE TEMPLATES (HIER√ÅRQUICA):
1. .cn_model/templates/ (templates personalizados)
2. ~/.local/share/context-navigator/templates/ (templates globais)
3. Templates embutidos no sistema (fallback)

### METADADOS OBRIGAT√ìRIOS (INALTERADOS):

```yaml
---
# OBRIGAT√ìRIOS (nunca omitir)
doc_type: "[decision|process|reference|architecture|analysis|planning]"
context_level: "[c1_root|c2_module|c3_component]"
context_type: "[infra|shared|core|api|data|ui]"
module: "[Nome espec√≠fico do m√≥dulo]"
priority: "[critical|high|medium|low]"
status: "[draft|active|deprecated|archived]"
connections:
  references: []    # Documentos referenciados
  impacts: []       # Documentos impactados  
  depends_on: []    # Depend√™ncias
  blocks: []        # Documentos bloqueados
  relates_to: []    # Documentos relacionados
created_date: "YYYY-MM-DD"
last_updated: "YYYY-MM-DD"
owner: "[Nome do respons√°vel]"

# OPCIONAIS (incluir quando relevante)
tags: ["tag1", "tag2", "tag3"]
complexity: "[low|medium|high|critical]"
version: "[semantic version]"
---
```

# =============================================================================
# SCRIPTS ORGANIZADOS 2.0
# =============================================================================

## üõ†Ô∏è ARQUITETURA DE SCRIPTS

### ORGANIZA√á√ÉO POR RESPONSABILIDADE:
```
scripts/
‚îú‚îÄ‚îÄ core/           # Processamento essencial (2 scripts)
‚îÇ   ‚îú‚îÄ‚îÄ context_scanner.py      # Scanner com WorkspaceManager
‚îÇ   ‚îî‚îÄ‚îÄ context_engine.py       # Motor contextual
‚îú‚îÄ‚îÄ validation/     # Valida√ß√£o de qualidade (3 scripts)
‚îÇ   ‚îú‚îÄ‚îÄ template_validator.py   # Validador de templates
‚îÇ   ‚îú‚îÄ‚îÄ cn_consistency_validator.py # Validador de consist√™ncia
‚îÇ   ‚îî‚îÄ‚îÄ metrics_validator.py    # Validador de m√©tricas
‚îú‚îÄ‚îÄ analysis/       # An√°lise avan√ßada (4 scripts)
‚îÇ   ‚îú‚îÄ‚îÄ pattern_detector.py     # Detector de padr√µes
‚îÇ   ‚îú‚îÄ‚îÄ conflict_detector.py    # Detector de conflitos
‚îÇ   ‚îú‚îÄ‚îÄ impact_analyzer.py      # Analisador de impactos
‚îÇ   ‚îî‚îÄ‚îÄ context_advisor.py      # Consultor inteligente
‚îî‚îÄ‚îÄ tools/          # Utilit√°rios (4 scripts)
    ‚îú‚îÄ‚îÄ cn_component_explorer.py # Explorador de componentes
    ‚îú‚îÄ‚îÄ cn_component_parser.py   # Parser de componentes
    ‚îú‚îÄ‚îÄ context_demo.py          # Sistema de demonstra√ß√£o
    ‚îî‚îÄ‚îÄ cn_global_launcher.py    # Launcher global
```

### TODOS OS SCRIPTS DEVEM:
1. **Usar WorkspaceManager** para detectar workspace primeiro
2. **Salvar em .cn_model/** (n√£o .context-map/)
3. **Suportar comando global** `cn` via launcher
4. **Validar workspace** antes de processar

# =============================================================================
# COMANDOS GLOBAIS 2.0
# =============================================================================

## üåê INTERFACE UNIFICADA

### COMANDOS ESSENCIAIS:
```bash
# Setup e gerenciamento
cn init                  # Inicializar workspace
cn status               # Status do workspace detectado
cn demo                 # Demonstra√ß√£o interativa

# Cria√ß√£o de documentos
cn new decision "nome"   # Criar decis√£o t√©cnica
cn new process "nome"    # Criar processo/runbook
cn new reference "nome"  # Criar API/refer√™ncia
cn new architecture "nome" # Criar arquitetura/diagrama
cn new analysis "nome"   # Criar an√°lise/investiga√ß√£o
cn new planning "nome"   # Criar planejamento/roadmap

# Ferramentas principais
cn scan                 # Escanear documentos (WorkspaceManager autom√°tico)
cn validate             # Valida√ß√£o completa
cn explore              # Explorar componentes
cn conflicts            # Detectar conflitos
cn metrics              # M√©tricas de qualidade
cn advisor              # Sugest√µes inteligentes
```

### SEMPRE:
- ‚úÖ Comando `cn` funciona de qualquer diret√≥rio
- ‚úÖ WorkspaceManager detecta workspace automaticamente
- ‚úÖ Salva em estrutura .cn_model/ apropriada
- ‚úÖ Roteamento autom√°tico para scripts especializados

# =============================================================================
# REGRAS DE VALIDA√á√ÉO 2.0
# =============================================================================

## ‚úÖ ANTES DE FINALIZAR QUALQUER DOCUMENTO:

### 1. VALIDAR WORKSPACE
- [ ] WorkspaceManager detectou workspace corretamente
- [ ] Estrutura .cn_model/ existe e √© v√°lida
- [ ] Permiss√µes de leitura/escrita funcionam

### 2. VALIDAR METADADOS (INALTERADOS)
- [ ] Todos os campos obrigat√≥rios preenchidos
- [ ] Valores dentro das op√ß√µes permitidas
- [ ] Datas no formato correto (YYYY-MM-DD)
- [ ] Conex√µes mapeadas corretamente

### 3. VALIDAR CONTE√öDO (INALTERADO)
- [ ] Template apropriado usado
- [ ] Estrutura seguida corretamente
- [ ] Se√ß√µes obrigat√≥rias presentes
- [ ] Informa√ß√µes suficientes e precisas

### 4. VALIDAR CONTEXTO 2.0
- [ ] Context_level consistente com localiza√ß√£o
- [ ] Context_type adequado ao prop√≥sito
- [ ] M√≥dulo corretamente identificado
- [ ] Relacionamentos mapeados via WorkspaceManager

### 5. VALIDAR COMPONENTIZA√á√ÉO
- [ ] Marca√ß√µes @cn: adicionadas quando gerar c√≥digo
- [ ] Documenta√ß√£o conectada ou criada conforme necess√°rio  
- [ ] Componentes registrados em .cn_model/components/
- [ ] Sincronia docs ‚Üî c√≥digo mantida

# =============================================================================
# REGRAS DE MIGRA√á√ÉO 1.0 ‚Üí 2.0
# =============================================================================

## üîÑ COMPATIBILIDADE E MIGRA√á√ÉO

### SE DETECTAR ARQUITETURA 1.0:
```yaml
Detectado: .contextrc + .context-map/
A√ß√£o Autom√°tica:
  1. Informar sobre migra√ß√£o dispon√≠vel
  2. Sugerir comandos: cn init (migra√ß√£o autom√°tica)
  3. Manter compatibilidade tempor√°ria
  4. Documentar que est√° usando formato legado
```

### MIGRA√á√ÉO AUTOM√ÅTICA:
```yaml
cn init detecta e migra:
  .contextrc ‚Üí .cn_model/workspace.yml
  .context-map/ ‚Üí .cn_model/maps/
  Scripts antigos ‚Üí Launcher moderno
  Manter arquivos 1.0 para seguran√ßa
```

### NUNCA:
- ‚ùå Quebrar compatibilidade for√ßadamente
- ‚ùå Perder dados durante migra√ß√£o
- ‚ùå Assumir que usu√°rio quer migrar
- ‚ùå Misturar estruturas 1.0 e 2.0

# =============================================================================
# REGRAS DE INTERA√á√ÉO 2.0
# =============================================================================

## ü§ù COLABORA√á√ÉO HUMANO-IA MODERNA:

### AO RECEBER SOLICITA√á√ÉO:
1. **Executar detec√ß√£o WorkspaceManager** automaticamente
2. **Analisar contexto via .cn_model/maps/** 
3. **Confirmar entendimento** baseado em workspace detectado
4. **Sugerir template apropriado** (global ou personalizado)
5. **Mapear conex√µes Code Bridge** quando relevante
6. **Gerar conte√∫do seguindo metodologia 2.0** rigorosamente

### AO SUGERIR MELHORIAS:
1. **Identificar oportunidades de componentiza√ß√£o** (@cn:)
2. **Sugerir conex√µes faltantes** baseado em WorkspaceManager
3. **Recomendar uso de comandos globais** `cn`
4. **Alertar sobre inconsist√™ncias** entre docs ‚Üî c√≥digo
5. **Propor organiza√ß√£o** seguindo hierarquia c1/c2/c3

### AO DETECTAR PROBLEMAS:
1. **Verificar status do WorkspaceManager** primeiro
2. **Reportar problemas de workspace** (.cn_model/ estrutura)
3. **Sugerir migra√ß√£o 1.0‚Üí2.0** se aplic√°vel
4. **Mapear impactos** usando nova arquitetura
5. **Validar solu√ß√µes** contra regras 2.0

# =============================================================================
# CASOS ESPECIAIS 2.0
# =============================================================================

## üö® SITUA√á√ïES ESPEC√çFICAS

### WORKSPACE N√ÉO DETECTADO:
```yaml
A√ß√£o:
  1. Informar que nenhum workspace foi encontrado
  2. Sugerir: cn init (inicializa√ß√£o)
  3. Oferecer usar templates globais como fallback
  4. Documentar que salvar√° em instala√ß√£o global
```

### TEMPLATES PERSONALIZADOS:
```yaml
Prioridade:
  1. .cn_model/templates/ (espec√≠ficos do projeto)
  2. ~/.local/share/context-navigator/templates/ (globais)
  3. Templates padr√£o embutidos (fallback)
```

### COMPONENTIZA√á√ÉO INCOMPLETA:
```yaml
Se gerar c√≥digo com @cn: incompleto:
  1. Completar campos obrigat√≥rios ausentes
  2. Adicionar campos necess√°rios automaticamente
  3. Conectar com documento existente ou criar novo
  4. Garantir marca√ß√£o @cn: completa no c√≥digo gerado
```

# =============================================================================
# REGRAS DE QUALIDADE 2.0
# =============================================================================

## üéØ PADR√ïES DE EXCEL√äNCIA MODERNOS:

### DOCUMENTA√á√ÉO DEVE SER (INALTERADO):
- **Espec√≠fica**: Informa√ß√µes precisas e detalhadas
- **Mensur√°vel**: Crit√©rios objetivos quando aplic√°vel
- **Ating√≠vel**: Realista e implement√°vel
- **Relevante**: Importante para o contexto
- **Temporal**: Prazos e cronogramas claros

### SEMPRE INCLUIR 2.0:
- **Workspace context** detectado via WorkspaceManager
- **Code Bridge references** quando aplic√°vel (@cn:)
- **Componentiza√ß√£o** expl√≠cita entre docs ‚Üî c√≥digo
- **Templates** apropriados (globais ou personalizados)
- **Comando `cn`** para a√ß√µes recomendadas

### NUNCA FAZER 2.0:
- Documentos sem detec√ß√£o de workspace
- Refer√™ncias para .context-map/ (usar .cn_model/)
- Assumir localiza√ß√£o de arquivos
- Ignorar comandos globais `cn`
- Misturar arquiteturas 1.0 e 2.0

# =============================================================================
# REGRAS DE AUTOMA√á√ÉO 2.0
# =============================================================================

## ü§ñ INTEGRA√á√ÉO MODERNA

### SEMPRE ap√≥s criar/modificar documento:
1. **Confirmar workspace** via WorkspaceManager
2. **Executar valida√ß√£o** via comando `cn validate`
3. **Verificar .cn_model/maps/** atualizados
4. **Adicionar marca√ß√µes @cn:** se c√≥digo foi gerado
5. **Atualizar componentes** em .cn_model/components/
6. **Resolver conflitos** detectados automaticamente

### INTERPRETAR RESULTADOS 2.0:
- **Workspace errors**: Problemas de detec√ß√£o/estrutura
- **Component errors**: Inconsist√™ncias Code Bridge
- **Migration warnings**: Sugest√µes 1.0‚Üí2.0
- **Template conflicts**: Problemas de template personalizado

# =============================================================================
# CHECKLIST FINAL 2.0
# =============================================================================

## ‚úÖ ANTES DE ENTREGAR QUALQUER TRABALHO:

### WORKSPACE E DETEC√á√ÉO:
- [ ] WorkspaceManager executado com sucesso
- [ ] Workspace detectado (.cn_model/ ou global)
- [ ] Estrutura .cn_model/ validada
- [ ] Templates apropriados identificados

### DOCUMENTA√á√ÉO (INALTERADA):
- [ ] Template apropriado foi usado
- [ ] Metadados obrigat√≥rios est√£o completos
- [ ] Conex√µes foram mapeadas corretamente
- [ ] Contexto foi identificado adequadamente

### COMPONENTIZA√á√ÉO 2.0:
- [ ] Marca√ß√µes @cn: adicionadas quando c√≥digo foi gerado
- [ ] Code Bridge conecta docs ‚Üî c√≥digo gerado
- [ ] Componentes registrados em .cn_model/components/
- [ ] Sincronia entre documenta√ß√£o e c√≥digo mantida

### COMANDOS E AUTOMA√á√ÉO:
- [ ] Comandos `cn` recomendados quando aplic√°vel
- [ ] Scripts organizados utilizados corretamente
- [ ] Valida√ß√£o via `cn validate` sugerida
- [ ] Performance e usabilidade optimizadas

### QUALIDADE GERAL:
- [ ] Context.rule 2.0 foi seguido completamente
- [ ] Arquitetura 2.0 respeitada em todos os aspectos
- [ ] Compatibilidade com 1.0 mantida quando necess√°rio
- [ ] WorkspaceManager functioning as expected

# =============================================================================
# LEMBRETE FINAL 2.0
# =============================================================================

üéØ **ESTA √â A LEI SAGRADA 2.0**

O Context Navigator 2.0 revolucionou com:
- üß† **WorkspaceManager**: Busca inteligente autom√°tica
- üåê **Comando Global**: `cn` funciona de qualquer lugar
- üß© **Code Bridge**: Conecta documenta√ß√£o ‚Üî c√≥digo  
- ‚ö° **Performance**: 67x mais r√°pido que vers√£o 1.0
- üèóÔ∏è **Organiza√ß√£o**: Scripts categorizados por responsabilidade

### SEMPRE LEMBRAR:
‚úÖ **Detectar workspace** via WorkspaceManager PRIMEIRO  
‚úÖ **Usar .cn_model/** (n√£o .context-map/)  
‚úÖ **Comandos globais `cn`** quando aplic√°vel  
‚úÖ **Code Bridge @cn:** para componentiza√ß√£o  
‚úÖ **Compatibilidade 1.0** quando necess√°rio  

**MEMORIZE, APLIQUE, MANTENHA 2.0.**

A revolu√ß√£o do Context Navigator 2.0 depende de voc√™ seguir estas regras em 100% das intera√ß√µes.

---

*"Context Navigator 2.0: Onde intelig√™ncia humana e artificial trabalham em perfeita harmonia."*

üìÖ **Criado:** 2025-01-13  
üîÑ **Vers√£o:** 2.0.0  
‚úÖ **Status:** Ativo  
üöÄ **Performance:** 67x melhor que 1.0 